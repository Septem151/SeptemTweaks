/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *
 *  - compile("g:n:v:c"): deprecated, replace with "api" (works like the old "compile") or "implementation" (can be more efficient)
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.0.1/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */
dependencies {
  implementation(rfg.deobf("curse.maven:cofhcore-69162:2388751"))
  implementation(rfg.deobf("curse.maven:thermalfoundation-222880:2388753"))
  implementation(rfg.deobf("curse.maven:thermalexpansion-69163:2388759"))
  implementation(rfg.deobf("curse.maven:tconstruct-74072:2264246"))
  runtimeOnly(rfg.deobf("curse.maven:mantle-74924:2264244"))

  // Optional mods
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:buildcraft-61811:2502739"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:mfr-66672:2366150"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:extrautilities-225561:2264384"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:claybuckets-242568:2293402"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:flinttools-236022:2316935"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:chisel-235279:2287442"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:ae2-223794:2296430"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:harvestcraft-221857:2270206"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:bop-220318:2499612"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:netherores-66675:2277489"))
  // runtimeOnlyNonPublishable(rfg.deobf("curse.maven:openblocks-228816:2386734"))

  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:crafttweaker-239197:2338487"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:modtweaker-220954:2313730"))
  runtimeOnlyNonPublishable("com.github.GTNewHorizons:NotEnoughItems:2.3.73-GTNH:dev")
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:neiaddons-63352:2262121"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:ner-225815:2272500"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:waila-73488:2230518"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:wawla-224712:2298772"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:unidict-244258:2329987"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:wanionlib-253043:2430663"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:betterquesting-238856:2950245"))
  runtimeOnlyNonPublishable(rfg.deobf("curse.maven:bqexpansion-238857:2950288"))
  runtimeOnlyNonPublishable(rfg.deobf(project.files("libs/questbook-3.0.0-1.7.10.jar")))
}
